{"version":3,"sources":["webpack:///./src/components/common/ContentEditable.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","Object","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","mdxType","parentName","className","metastring","static","isMDXComponent"],"mappings":"uOAMaA,EAAe,kMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACN,EAADM,OAAAG,EAAA,EAAAH,CAAA,GAAeP,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAG5EJ,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMK,WAAW,OAAU,CAC5BC,UAAa,cACbC,WAAc,SACdC,QAAU,IAHT,w2BAqCTZ,EAAWa,gBAAiB","file":"component---src-components-common-content-editable-mdx-3b6cb5b161a472549ae2.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesdavies/dev/react/react-kinetic-lib/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`import { ContentEditable } from 'react-kinetic-lib';\n\ninitialState = {\n  htmlValue: 'default value',\n};\n\nconst updateOutput = (_e, value) => {\n  setState({ htmlValue: value });\n};\nconst handleHotKeys = e => {\n  if (e.nativeEvent.keyCode === 13 && !e.nativeEvent.shiftKey) {\n    alert(\\`Checking output: \\${state.htmlValue}\\`);\n    e.preventDefault();\n    setState({ htmlValue: 'default value' });\n  }\n};\n\n<div>\n  <p>Output: {state.htmlValue}</p>\n  <div style={{ border: '1px solid' }}>\n    <ContentEditable\n      contentEditable=\"plaintext-only\"\n      html={state.htmlValue}\n      onChange={updateOutput}\n      onKeyPress={handleHotKeys}\n    />\n  </div>\n</div>;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}